---
title: "Reproducibility Check"
author: "Ayush"
format: 
  html:
    code-fold: true
---

# What is this document?

Here in this doc I will try and reproduce some of the results in the World Bank paper "Intent to implementation: Summary of lessons from tracking India's social protection response to COVID-19".

Doing this will help establish if I am applying the weights correctly for analysing the CMIE's data. 

# Which datasets are is used?

:::{.callout-note}
WB has confirmed that the numbers in the paper were generated by using responses to CSM 1 only.
:::

We will be using the responses to the household frame to this module as the questions/results of interest are in HH frame.


```{r libraries}
#| include: false
#| message: false
#| warning: false

library(here) # to handle addresses
library(dplyr) # data wrangling

```



# Reproducing the results

In order to reproduce the results it is necessary to note the following from the paper:

:::{.callout-important}
"For analytical tractability, households are classified
as those that received food only, cash only and both
food and cash benefits. Food benefits comprise
of access to PDS rations while cash comprises of
transfers received under all PMGKY schemes except
PDS and provident fund withdrawals. NREGA
related cash receipts were not included in the
survey module and are excluded in this analysis.
Additionally, EPF withdrawals are excluded in the
analysis (even though the survey captures this
information) because of the smaller proportion of
households that are enrolled in the program."
:::



## Read CSM1

Here the data is imported from a `csv` file and the only observations with `response_status == "Accepted"` are preserved. Consequently, the new variable `w_cntry` is created as a product of `hh_weight_for_country_w` and `hh_non_response_for_country_w`.

A small peek into the data set provided below.

```{r imp-csm1}
#| message: false
#| warning: false


csm1 <- readr::read_csv("data/data-csm/hh_csm_r1.csv")

# keep only accepted responses

csm1|>
  filter(response_status == "Accepted") -> csm1


# create country level adjusted weight

csm1|>
  mutate(
    w_cntry = hh_weight_for_country_w * hh_non_response_for_country_w
  ) -> csm1

csm1|>
  head(50)|>
  knitr::kable()|>
  kableExtra::kable_styling()|>
  kableExtra::scroll_box(width = "100%", height = "400px")
  

```

## Reproduce: "Across the country, nearly 74% of all households received food through PDS allocations, 40%  of households received cash-transfers."

```{r rep1}
csm1|>
  mutate(
    food_ben = ifelse(
      as.numeric(rice_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(wheat_atta_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(pulses_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0,
      1,0
    ),
    cash_ben = ifelse(
      !(received_amt_in_rs_from_jan_dhan_scheme %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pm_kisan_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_lpg_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pension_scheme %in% c("0","Not Applicable")),
      1,0
    )
  )|>
  summarise(
    food_ben_perc  = weighted.mean(food_ben, w_cntry),
    cash_ben_perc  = weighted.mean(cash_ben, w_cntry)
  )



```

:::{.callout-tip}
### Sucessful replication for:
Across the country, nearly 74% of all households received food through PDS allocations, 40%  of households received cash-transfers. The reproduced results are not show in % format.
:::


## Reproduce: "While nearly 85% of all rural households’ report accessing food or cash benefits following the pandemic, only 69.2% of urban households report the same."

Assuming here by "accessing food or cash" it is meant that HHs that can access either one or both.

```{r rep2}

csm1|>
  mutate(
    food_ben = ifelse(
      as.numeric(rice_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(wheat_atta_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(pulses_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0,
      1,0
    ),
    cash_ben = ifelse(
      !(received_amt_in_rs_from_jan_dhan_scheme %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pm_kisan_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_lpg_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pension_scheme %in% c("0","Not Applicable")),
      1,0
    ),
    food_or_cash = ifelse(
      food_ben == 1 | cash_ben == 1,
      1,0
    )
  )|>
  group_by(region_type)|>
  summarise(
    perc_food_or_cash = weighted.mean(food_or_cash, w_cntry)
  )

```

:::{.callout-tip}
### Sucessful replication for:
While nearly 85% of all rural households’ report accessing food or cash benefits following the pandemic, only 69.2% of urban households report the same.
:::

## Reproduce: Graph 1 from the WB Paper

The Graph 2 of the WB paper has to column charts. The one on the left if _Households Accessing Benefits as a share of population_ and the one on the right is _Enrollment Pre-Covid_. I will try to generate results of these two graphs.

__Graph 1a Households Accessing Benefits as a share of population__

```{r rep3a}

csm1|>
  mutate(
     food_ben = ifelse(
      as.numeric(rice_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(wheat_atta_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(pulses_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0,
      1,0
    ),
    cash_ben = ifelse(
      !(received_amt_in_rs_from_jan_dhan_scheme %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pm_kisan_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_lpg_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pension_scheme %in% c("0","Not Applicable")),
      1,0
    ),
    pf_ben = ifelse(
      !(received_amt_in_rs_from_pf_scheme %in% c("0","Not Applicable")),
      1,0
    )
  )|>
  group_by(region_type)|>
  summarise(
    Food = weighted.mean(food_ben, w_cntry)*100,
    Cash = weighted.mean(cash_ben, w_cntry)*100,
    PF = weighted.mean(pf_ben, w_cntry)*100
  )

```

:::{.callout-tip}
### Sucessful replication for: 
Graph 1a Households Accessing Benefits as a share of population
:::


__Graph 1b Enrollment Pre-Covid__

In order to calculate the numbers for this chart, I am making the following assumptions:

- Food, eligible if `type_of_ration_card` is "BPL/Antodaya/Annapurna" or "Other"
- Cash, enrolled in any one or more of Jandhan, LPG, P Kisan or Pension. This is determined by `hh_enrolled_in_*`, except for jandhan. 
- PF, determined by variable `hh_enrolled_in_pf_scheme`


```{r rep3b}

csm1|>
  mutate(
    ele_food = ifelse(
      type_of_ration_card %in% c("BPL/Antodaya/Annapurna","Other"),
      1,0
    ),
    ele_cash = ifelse(
      !(no_of_mem_enrolled_in_jan_dhan_scheme %in% c("0","Not Applicable"))|
        hh_enrolled_in_lpg_scheme == "Yes" | 
        hh_enrolled_in_pension_scheme == "Yes" | 
        hh_enrolled_in_pm_kisan_scheme == "Yes",
      1,0
    ),
    ele_pf = ifelse(
      hh_enrolled_in_pf_scheme == "Yes",
      1,0
    )
  )|>
  group_by(region_type)|>
  summarise(
    perc_ele_food = weighted.mean(ele_food, w_cntry),
    perc_ele_cash = weighted.mean(ele_cash, w_cntry),
    perc_ele_pf = weighted.mean(ele_pf, w_cntry),
  )


```

:::{.callout-tip}
### Sucessful replication for: 
Graph 1b Enrollment Pre-Covid
:::

## Reproduce: Tabel 2 of the WB paper

Following are some of the estimates from the Table2 to reproduce.

```{r prod-tab2}
#| echo: false

tibble(
  `Share of Eligible Households Who have Received Benefits` = c(
    "Food Only", "Cash Only", "Food and cash Only"
  ),
  `All-India` = c("84.6%", "80.2%", "70.5%"),
  `Rural` = c("89.1%", "81.5%", "70.2%"),
  `Urban` = c("77.3%", "76.7%", "71.8%")
)|>
  gt::gt()|>
  gt::cols_align(align = "center")|>
  gt::tab_header(title = "Table 2 : Eligible Households Receiving Benefits under PMGKY of WB paper",
                 subtitle = "Partial table is presented")

```

I will attempt to reproduce these partial results below:

```{r rep4}

# preserve the dummies

csm1|>
  mutate(
    w_hh_w = hh_weight_w * hh_non_response_w,
    ele_food = ifelse(
      type_of_ration_card %in% c("BPL/Antodaya/Annapurna","Other"),
      1,0
    ),
    ele_cash = ifelse(
      !(no_of_mem_enrolled_in_jan_dhan_scheme %in% c("0","Not Applicable"))|
        hh_enrolled_in_lpg_scheme == "Yes" | 
        hh_enrolled_in_pension_scheme == "Yes" | 
        hh_enrolled_in_pm_kisan_scheme == "Yes",
      1,0
    ),
    ele_pf = ifelse(
      hh_enrolled_in_pf_scheme == "Yes",
      1,0
    ),
    food_ben = ifelse(
      as.numeric(rice_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(wheat_atta_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0 |
        as.numeric(pulses_bought_from_pds_shop_in_prev_cal_mth_in_kg) > 0,
      1,0
    ),
    cash_ben = ifelse(
      !(received_amt_in_rs_from_jan_dhan_scheme %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pm_kisan_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_lpg_scheme  %in% c("0","Not Applicable"))|
        !(received_amt_in_rs_from_pension_scheme %in% c("0","Not Applicable")),
      1,0
    ),
    pf_ben = ifelse(
      !(received_amt_in_rs_from_pf_scheme %in% c("0","Not Applicable")),
      1,0
    )
  ) -> csm1

## All India results

### Food only

csm1|>
  filter(ele_food == 1 & ele_cash == 0 & ele_pf == 0)|>
  summarise(
    perc_only_food_ben = weighted.mean(food_ben, w_cntry)
  ) -> ai_food_only

### cash only

csm1|>
  filter(ele_food == 1 & ele_cash == 1 & ele_pf == 0)|>
  summarise(
    perc_only_cash_ben = weighted.mean(cash_ben, w_cntry)
  ) -> ai_cash_only

csm1|>
  filter(ele_food == 1 & ele_cash == 1 & ele_pf == 0)|>
  mutate(
    only_food_and_cash_ben = ifelse(
      cash_ben ==1 & food_ben == 1,
      1,0
    )
  )|>
  summarise(
    perc_only_food_and_cash_ben = weighted.mean(only_food_and_cash_ben, w_cntry)
  ) -> ai_food_and_cash_only

## Region summaries

csm1|>
  filter(ele_food == 1 & ele_cash == 0 & ele_pf == 0)|>
  group_by(region_type)|>
  summarise(
    perc_only_food_ben = weighted.mean(food_ben, w_cntry)
  ) -> r_food_only

csm1|>
  filter(ele_food == 0 & ele_cash == 1 & ele_pf == 0)|>
  group_by(region_type)|>
  summarise(
    perc_only_cash_ben = weighted.mean(cash_ben, w_cntry)
  ) -> r_cash_only

csm1|>
  filter(ele_food == 1 & ele_cash == 1 & ele_pf == 0)|>
  mutate(
    only_food_and_cash_ben = ifelse(
      cash_ben ==1 & food_ben == 1,
      1,0
    )
  )|>
  group_by(region_type)|>
  summarise(
    perc_only_food_and_cash_ben = weighted.mean(only_food_and_cash_ben, w_cntry)
  ) -> r_food_and_cash_only

## create table

tibble(
  `Share of Eligible Households Who have Received Benefits` = c(
    "Food Only", "Cash Only", "Food and cash Only"
  ),
  `All-India` = c(ai_food_only$perc_only_food_ben[1],
                  ai_cash_only$perc_only_cash_ben[1],
                  ai_food_and_cash_only$perc_only_food_and_cash_ben[1]),
  `Rural` = c(r_food_only$perc_only_food_ben[1],
              r_cash_only$perc_only_cash_ben[1],
              r_food_and_cash_only$perc_only_food_and_cash_ben[1]),
  `Urban` = c(r_food_only$perc_only_food_ben[2],
              r_cash_only$perc_only_cash_ben[2],
              r_food_and_cash_only$perc_only_food_and_cash_ben[2])
)|>
  gt::gt()|>
  gt::cols_align(align = "center")|>
  gt::tab_header(title = "REPRODUCED::Table 2 : Eligible Households Receiving Benefits under PMGKY of WB paper",
                 subtitle = "Partial table is presented | with hh weights for country")

```

```{r weights_adjustment}
## All India results

### Food only

csm1|>
  filter(ele_food == 1 & ele_cash == 0 & ele_pf == 0)|>
  summarise(
    perc_only_food_ben = weighted.mean(food_ben, w_hh_w)
  ) -> ai_food_only

### cash only

csm1|>
  filter(ele_food == 1 & ele_cash == 1 & ele_pf == 0)|>
  summarise(
    perc_only_cash_ben = weighted.mean(cash_ben, w_hh_w)
  ) -> ai_cash_only

csm1|>
  filter(ele_food == 1 & ele_cash == 1 & ele_pf == 0)|>
  mutate(
    only_food_and_cash_ben = ifelse(
      cash_ben ==1 & food_ben == 1,
      1,0
    )
  )|>
  summarise(
    perc_only_food_and_cash_ben = weighted.mean(only_food_and_cash_ben, w_hh_w)
  ) -> ai_food_and_cash_only

## Region summaries

csm1|>
  filter(ele_food == 1 & ele_cash == 0 & ele_pf == 0)|>
  group_by(region_type)|>
  summarise(
    perc_only_food_ben = weighted.mean(food_ben, w_hh_w)
  ) -> r_food_only

csm1|>
  filter(ele_food == 0 & ele_cash == 1 & ele_pf == 0)|>
  group_by(region_type)|>
  summarise(
    perc_only_cash_ben = weighted.mean(cash_ben, w_hh_w)
  ) -> r_cash_only

csm1|>
  filter(ele_food == 1 & ele_cash == 1 & ele_pf == 0)|>
  mutate(
    only_food_and_cash_ben = ifelse(
      cash_ben ==1 & food_ben == 1,
      1,0
    )
  )|>
  group_by(region_type)|>
  summarise(
    perc_only_food_and_cash_ben = weighted.mean(only_food_and_cash_ben, w_hh_w)
  ) -> r_food_and_cash_only

## create table

tibble(
  `Share of Eligible Households Who have Received Benefits` = c(
    "Food Only", "Cash Only", "Food and cash Only"
  ),
  `All-India` = c(ai_food_only$perc_only_food_ben[1],
                  ai_cash_only$perc_only_cash_ben[1],
                  ai_food_and_cash_only$perc_only_food_and_cash_ben[1]),
  `Rural` = c(r_food_only$perc_only_food_ben[1],
              r_cash_only$perc_only_cash_ben[1],
              r_food_and_cash_only$perc_only_food_and_cash_ben[1]),
  `Urban` = c(r_food_only$perc_only_food_ben[2],
              r_cash_only$perc_only_cash_ben[2],
              r_food_and_cash_only$perc_only_food_and_cash_ben[2])
)|>
  gt::gt()|>
  gt::cols_align(align = "center")|>
  gt::tab_header(title = "REPRODUCED::Table 2 : Eligible Households Receiving Benefits under PMGKY of WB paper",
                 subtitle = "Partial table is presented | with hh weights for wave")

```



:::{.callout-tip}
### Successful replication for Table 2

Successful replication on the second attempt after referring to the files shared by Sutirtha. Sutirtha has used wave level weights, I was using country level weights.

Interesting to note that most results match regardless of country or wave level weights, except for the results related to cash benefits.
:::